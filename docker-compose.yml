version: '3.8'

services:
  smart-ems:
    build: .
    container_name: smart-ems-app
    ports:
      - "8501:8501"
    environment:
      - SYSTEM_ENV=production
      - DEBUG=false
      - PORT=8501
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - smart-ems-network

  redis:
    image: redis:7-alpine
    container_name: smart-ems-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - smart-ems-network

  prometheus:
    image: prom/prometheus:latest
    container_name: smart-ems-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - smart-ems-network

  grafana:
    image: grafana/grafana:latest
    container_name: smart-ems-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - smart-ems-network

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  smart-ems-network:
    driver: bridge
